[{"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Routing.js":"4","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\FormikControl.js":"5","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Input.js":"6","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Textarea.js":"7","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Select.js":"8","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Radio.js":"9","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Checkbox.js":"10","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Datepicker.js":"11","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\TextError.js":"12","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Actions.js":"13","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Store.js":"14","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Reducers.js":"15","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\State.js":"16","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Login.js":"17","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Contact.js":"18","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Home.js":"19","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Error404.js":"20","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\RegisterPage.js":"21","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\RootReducer.js":"22","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Map.js":"23","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\Dashbord.js":"24","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Header\\HeaderAndSidebar.js":"25","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Header\\SidebarData.js":"26","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\UpdateProfile.js":"27","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\TableView.js":"28","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Header.js":"29","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Country.js":"30","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\States.js":"31","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateRouter\\Auth.js":"32","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateRouter\\PrivateRouter.js":"33","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Forgot.js":"34","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\ForgetToNew.js":"35","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Slider.js":"36","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\CreateBlog.js":"37","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\ResetPassword.js":"38","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\SingleBlog.js":"39"},{"size":500,"mtime":499162500000,"results":"40","hashOfConfig":"41"},{"size":442,"mtime":1609393139259,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":2478,"mtime":1609404319093,"results":"44","hashOfConfig":"41"},{"size":955,"mtime":1608894612205,"results":"45","hashOfConfig":"41"},{"size":496,"mtime":1608726267198,"results":"46","hashOfConfig":"41"},{"size":482,"mtime":1608792737544,"results":"47","hashOfConfig":"41"},{"size":825,"mtime":1608888613834,"results":"48","hashOfConfig":"41"},{"size":1072,"mtime":1608866192851,"results":"49","hashOfConfig":"41"},{"size":1605,"mtime":1609229122283,"results":"50","hashOfConfig":"41"},{"size":1168,"mtime":1608866192859,"results":"51","hashOfConfig":"41"},{"size":189,"mtime":1609212431102,"results":"52","hashOfConfig":"41"},{"size":19378,"mtime":1609402802539,"results":"53","hashOfConfig":"41"},{"size":219,"mtime":1609148933952,"results":"54","hashOfConfig":"41"},{"size":10141,"mtime":1609402520073,"results":"55","hashOfConfig":"41"},{"size":1508,"mtime":1609402400932,"results":"56","hashOfConfig":"41"},{"size":3688,"mtime":1609393603999,"results":"57","hashOfConfig":"41"},{"size":5365,"mtime":1609393114048,"results":"58","hashOfConfig":"41"},{"size":2550,"mtime":1609420218937,"results":"59","hashOfConfig":"41"},{"size":173,"mtime":1608782432529,"results":"60","hashOfConfig":"41"},{"size":11837,"mtime":1609393125956,"results":"61","hashOfConfig":"41"},{"size":932,"mtime":1609402537678,"results":"62","hashOfConfig":"41"},{"size":659,"mtime":1609153264920,"results":"63","hashOfConfig":"41"},{"size":3592,"mtime":1609410818105,"results":"64","hashOfConfig":"41"},{"size":2187,"mtime":1609395419108,"results":"65","hashOfConfig":"41"},{"size":460,"mtime":1608812440380,"results":"66","hashOfConfig":"41"},{"size":9287,"mtime":1609402778874,"results":"67","hashOfConfig":"41"},{"size":597,"mtime":1609418323221,"results":"68","hashOfConfig":"41"},{"size":987,"mtime":1609394249891,"results":"69","hashOfConfig":"41"},{"size":843,"mtime":1608893661178,"results":"70","hashOfConfig":"41"},{"size":835,"mtime":1608894795763,"results":"71","hashOfConfig":"41"},{"size":201,"mtime":1609393103111,"results":"72","hashOfConfig":"41"},{"size":589,"mtime":1609391340019,"results":"73","hashOfConfig":"41"},{"size":2692,"mtime":1609393118875,"results":"74","hashOfConfig":"41"},{"size":3612,"mtime":1609393117116,"results":"75","hashOfConfig":"41"},{"size":1358,"mtime":1609296942642,"results":"76","hashOfConfig":"41"},{"size":3611,"mtime":1609393082960,"results":"77","hashOfConfig":"41"},{"size":3834,"mtime":1609393090071,"results":"78","hashOfConfig":"41"},{"size":6904,"mtime":1609417306335,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"vrpkdh",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"82"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\index.js",[],["163","164"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Routing.js",["165"],"import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route, BrowserRouter } from 'react-router-dom'\r\nimport Contact from './PublicFolder/Register/Contact'\r\nimport Home from './PublicFolder/Register/Home'\r\nimport Login from './PublicFolder/Register/Login'\r\nimport Register from './PublicFolder/Register/RegisterPage'\r\nimport Error404 from './PublicFolder/Register/Error404'\r\nimport Dashbord from './PrivateFolder/Pages/Dashbord'\r\nimport UpdateProfile from './PrivateFolder/Pages/UpdateProfile'\r\nimport TableView from './PrivateFolder/Pages/TableView'\r\nimport PrivateRouter from './PrivateRouter/PrivateRouter'\r\nimport { isAuthenticated } from './PrivateRouter/Auth'\r\nimport Forgot from './PublicFolder/Register/Forgot'\r\nimport ForgetToNew from './PublicFolder/Register/ForgetToNew'\r\nimport CreateBlog from './PrivateFolder/Pages/CreateBlog'\r\nimport ResetPassword from './PrivateFolder/Pages/ResetPassword'\r\nimport SingleBlog from './PrivateFolder/Pages/SingleBlog'\r\n\r\nfunction Routing() {\r\n    if (isAuthenticated() !== false) {\r\n        <Route exact path=\"/\" component={Dashbord} />\r\n    }\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Switch>\r\n                    {(isAuthenticated()) ? <Route exact path=\"/\" component={Dashbord} /> : <Route exact path=\"/\" component={Home} />}\r\n            \r\n                    <Route exact path=\"/home\" component={Home} />\r\n                    <Route exact path=\"/register\" component={Register} />\r\n                    <Route exact path=\"/contact\" component={Contact} />\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/forgot\" component={Forgot} />\r\n                    <Route exact path=\"/forget-password/link/\" component={Error404} />\r\n                    <Route path=\"/forget-password/link/\" component={ForgetToNew} />\r\n\r\n                    <PrivateRouter exact path=\"/dash\" component={Dashbord} />\r\n                    <PrivateRouter exact path=\"/update\" component={UpdateProfile} />\r\n                    <PrivateRouter exact path=\"/table\" component={TableView} />\r\n                    <PrivateRouter exact path=\"/createBlog\" component={CreateBlog} />\r\n                    <PrivateRouter exact path=\"/singleBlog\" component={SingleBlog} />\r\n                    <PrivateRouter exact path=\"/resetPassword\" component={ResetPassword} />\r\n                </Switch>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routing\r\n","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\FormikControl.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Input.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Textarea.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Select.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Radio.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Checkbox.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Datepicker.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\TextError.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Actions.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Store.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Reducers.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\State.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Login.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Contact.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Home.js",["166"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Error404.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\RegisterPage.js",["167"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\n\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Recaptcha from \"react-google-recaptcha\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport FormikControl from \"../Pages/FormikControl\";\r\nimport Header from \"./Header\";\r\nimport { isAuthenticated } from '../../PrivateRouter/Auth'\r\nimport { userGoingForRegister, getAllCountry, getAllstate } from \"../../Redux/Actions\";\r\n\r\nconst option = [\r\n    { key: \"Select Course\", value: \"\" },\r\n    { key: \"BCA\", value: \"bca\" },\r\n    { key: \"BBA\", value: \"bba\" },\r\n    { key: \"BCOM\", value: \"bcom\" },\r\n];\r\nconst checkBoxOptions = [\r\n    { key: \"Cricket\", value: \"cricket\" },\r\n    { key: \"Reading\", value: \"reading\" },\r\n];\r\n\r\nfunction Register(props) {\r\n    const history = useHistory()\r\n\r\n    if (isAuthenticated() !== false) {\r\n        history.push(\"/\")\r\n    }\r\n    const dispatch = useDispatch();\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n\r\n    const CountryData = useSelector(state => state.country.CountryData)\r\n    const StatesData = useSelector(state => state.states.StateData)\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCountry())\r\n    }, [])\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        phoneNo: \"\",\r\n        pinCode: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        course: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        country: \"\",\r\n        address: \"\",\r\n        skill: [],\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required(\"Name required *\"),\r\n        phoneNo: Yup.number()\r\n            .typeError(\"Only Number Allowed\")\r\n            .required(\"PhoneNo required *\"),\r\n        pinCode: Yup.number()\r\n            .typeError(\"Only Number Allowed\")\r\n            .required(\"Pincode required *\"),\r\n        email: Yup.string().email(\"Invalid Format*\").required(\"Email required *\"),\r\n        password: Yup.string().length(6).required(\"Password required *\"),\r\n        confirmPassword: Yup.string()\r\n            .oneOf([Yup.ref(\"password\")], \"password miss match*\")\r\n            .required(\"ConfimPassword required *\"),\r\n        course: Yup.string().required(\"Course required *\"),\r\n        city: Yup.string().required(\"City required *\"),\r\n        address: Yup.string().required(\"Address required *\"),\r\n    });\r\n\r\n    const validateSkills = (values) => {\r\n        let error;\r\n        if (values.length === 0) {\r\n            error = \"Required!\";\r\n        }\r\n        return error;\r\n    };\r\n    const validateCountry = (values) => {\r\n        let error;\r\n        if (values === '') {\r\n            error = \"Required!\";\r\n        }\r\n        else {\r\n            dispatch(getAllstate(values));\r\n        }\r\n        return error;\r\n    };\r\n    const validateState = (values) => {\r\n        let error;\r\n        if (values === '') {\r\n            error = \"Required!\";\r\n        }\r\n        return error;\r\n    };\r\n\r\n    const onSubmit = (values) => {\r\n        dispatch(userGoingForRegister(values, props));\r\n    };\r\n\r\n    const handlecaptcha = (e) => setCaptcha(e);\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <ToastContainer />\r\n            <Card className=\"card\">\r\n                <Card.Body className=\"cardbody\">\r\n                    <div className=\"row\">\r\n                        <div className=\"form col-8\">\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                validationSchema={validationSchema}\r\n                                onSubmit={onSubmit}\r\n                            >\r\n                                {(formik) => {\r\n                                    return (\r\n                                        <Form>\r\n                                            <h1 align=\"center\">Sign Up</h1>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-6\">\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"Name*\"\r\n                                                        name=\"name\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"email\"\r\n                                                        lable=\"Email*\"\r\n                                                        name=\"email\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"PhoneNo*\"\r\n                                                        name=\"phoneNo\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"select\"\r\n                                                        lable=\"Select Course*\"\r\n                                                        name=\"course\"\r\n                                                        option={option}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"country\"\r\n                                                        lable=\"Select Country*\"\r\n                                                        name=\"country\"\r\n                                                        option={CountryData}\r\n                                                        validate={validateCountry}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"state\"\r\n                                                        lable=\"Select State*\"\r\n                                                        name=\"state\"\r\n                                                        option={StatesData}\r\n                                                        validate={validateState}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"City*\"\r\n                                                        name=\"city\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-6\">\r\n                                                    <FormikControl\r\n                                                        control=\"checkbox\"\r\n                                                        lable=\"Skill*\"\r\n                                                        name=\"skill\"\r\n                                                        validate={validateSkills}\r\n                                                        options={checkBoxOptions}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"Pincode*\"\r\n                                                        name=\"pinCode\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"password\"\r\n                                                        lable=\"Password*\"\r\n                                                        name=\"password\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"password\"\r\n                                                        lable=\"Confirm Password*\"\r\n                                                        name=\"confirmPassword\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"textarea\"\r\n                                                        lable=\"Address*\"\r\n                                                        name=\"address\"\r\n                                                    />\r\n                                                    <label htmlFor=\"captcha\">Captcha</label>\r\n                                                    <Recaptcha\r\n                                                        sitekey=\"6Lf-RwsaAAAAAP42dLJgYMQ8K6oK4xmrFG_NUSWP\"\r\n                                                        render=\"explicit\"\r\n                                                        onChange={(e) => {\r\n                                                            handlecaptcha(e);\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-center\">\r\n                                                <Button\r\n                                                    className=\"button\"\r\n                                                    type=\"submit\"\r\n                                                    variant=\"success\"\r\n                                                    disabled={!formik.isValid || captcha === \"\"}\r\n                                                >\r\n                                                    Submit\r\n                                                 </Button>\r\n                                                <Button className=\"button\" type=\"reset\" variant=\"info\">\r\n                                                    Reset\r\n                                            </Button>\r\n                                            </div>\r\n                                        </Form>\r\n                                    );\r\n                                }}\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"image col-4\">\r\n                            <img\r\n                                src=\"https://i.pinimg.com/originals/f1/a3/c0/f1a3c03479f4437eb83d26eb1f13ae71.png\"\r\n                                height=\"80%\"\r\n                                width=\"85%\"\r\n                                alt=\"Login With Social Media\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register\r\n","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\RootReducer.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Map.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\Dashbord.js",["168","169"],"import React, { useEffect } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Card } from 'antd';\r\n\r\nimport deleteButton from '../../PublicFolder/Image/delete.png'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport HeaderAndSidebar from '../Header/HeaderAndSidebar'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteBlog, getBlogById } from '../../Redux/Actions';\r\n\r\nfunction Dashbord() {\r\n    const { Meta } = Card;\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const blogById = useSelector(state => state.getBlogById.blogById.blog)\r\n\r\n    useEffect(() => {\r\n        dispatch(getBlogById())\r\n    }, [])\r\n\r\n    const deleteBlogById = (deleteId) => {\r\n        dispatch(deleteBlog(deleteId))\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        console.log(values);\r\n    }\r\n    const history = useHistory()\r\n    return (\r\n        < div >\r\n            <HeaderAndSidebar title=\"dashbord\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12  blogbutton\">\r\n                        <Button className=\"blogbutton2\" variant=\"dark\"><Link to=\"/createBlog\"> Create Blog</Link></Button >\r\n                    </div>\r\n                </div>\r\n                <div className=\"row allblog\">\r\n                    {\r\n                        blogById && blogById.map((item, i) => {\r\n                            return (\r\n                                <>\r\n                                    <Card className=\"blogcard\" key={i}\r\n                                        hoverable\r\n                                        style={{ width: 320 }}\r\n                                        cover={\r\n                                            <img\r\n                                                alt=\"example\"\r\n                                                onClick={() => history.push({\r\n                                                    pathname: \"/singleBlog\",\r\n                                                    state: item\r\n                                                }\r\n                                                )}\r\n                                                src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\"\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-8\">\r\n                                                <Meta title={item.blogTitle.slice(0,20)} description={item.blogContent.slice(0,20)} />\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <div className=\"row \">\r\n                                                    <div className=\"deleteButton\">\r\n                                                        <img src={deleteButton} alt=\"delete\" height=\"95%\" width=\"30%\" onClick={() => { deleteBlogById(item._id) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card>\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </HeaderAndSidebar>\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Dashbord\r\n","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Header\\HeaderAndSidebar.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Header\\SidebarData.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\UpdateProfile.js",["170","171","172"],"import React, { useEffect, useState } from 'react'\r\nimport { Formik, Form } from \"formik\";\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n\r\nimport FormikControl from \"../../PublicFolder/Pages/FormikControl\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserById, getAllCountry, getAllstate ,updateProfile } from '../../Redux/Actions';\r\nimport HeaderAndSidebar from '../Header/HeaderAndSidebar'\r\nimport * as Yup from \"yup\";\r\n\r\n\r\n\r\nfunction UpdateProfile() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserById())\r\n        dispatch(getAllCountry())\r\n    }, [])\r\n\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n\r\n    const CountryData = useSelector(state => state.country.CountryData)\r\n    const StatesData = useSelector(state => state.states.StateData)\r\n\r\n    const option = [\r\n        { key: \"Select Course\", value: \"\" },\r\n        { key: \"BCA\", value: \"bca\" },\r\n        { key: \"BBA\", value: \"bba\" },\r\n        { key: \"BCOM\", value: \"bcom\" },\r\n    ];\r\n    const checkBoxOptions = [\r\n        { key: \"Cricket\", value: \"cricket\" },\r\n        { key: \"Reading\", value: \"reading\" },\r\n    ];\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        phoneNo: \"\",\r\n        pinCode: \"\",\r\n        email: \"\",\r\n        course: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        country: \"\",\r\n        address: \"\",\r\n        skill: [],\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required(\"Name required *\"),\r\n        phoneNo: Yup.number()\r\n            .typeError(\"Only Number Allowed\")\r\n            .required(\"PhoneNo required *\"),\r\n        pinCode: Yup.number()\r\n            .typeError(\"Only Number Allowed\")\r\n            .required(\"Pincode required *\"),\r\n        email: Yup.string().email(\"Invalid Format*\").required(\"Email required *\"),\r\n        course: Yup.string().required(\"Course required *\"),\r\n        city: Yup.string().required(\"City required *\"),\r\n        address: Yup.string().required(\"Address required *\"),\r\n    });\r\n\r\n    const validateSkills = (values) => {\r\n        let error;\r\n        if (values.length === 0) {\r\n            error = \"Required!\";\r\n        }\r\n        return error;\r\n    };\r\n    const validateCountry = (values) => {\r\n        let error;\r\n        if (values === '') {\r\n            error = \"Required!\";\r\n        }\r\n        else {\r\n            dispatch(getAllstate(values));\r\n        }\r\n        return error;\r\n    };\r\n    const validateState = (values) => {\r\n        let error;\r\n        if (values === '') {\r\n            error = \"Required!\";\r\n        }\r\n        return error;\r\n    };\r\n\r\n    const onSubmit = (values,onSubmitProps) => {\r\n        console.log(values);\r\n      dispatch(updateProfile(values,onSubmitProps))  \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <HeaderAndSidebar title=\"update\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12  blogbutton\">\r\n                        <Button className=\"blogbutton2\" variant=\"dark\"><Link to=\"/resetPassword\">Reset Password</Link></Button >\r\n                    </div>\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Card className=\"card\">\r\n                        <Card.Body className=\"cardbody\">\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                validationSchema={validationSchema}\r\n                                onSubmit={onSubmit}\r\n                            >\r\n                                {(formik) => {\r\n                                    return (\r\n                                        <Form className=\"formUpdate\">\r\n                                            <div >\r\n                                                <h1 align=\"center\">Update Profile</h1>\r\n                                                <FormikControl\r\n                                                    control=\"input\"\r\n                                                    type=\"text\"\r\n                                                    lable=\"Name*\"\r\n                                                    name=\"name\"\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"input\"\r\n                                                    type=\"email\"\r\n                                                    lable=\"Email*\"\r\n                                                    name=\"email\"\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"input\"\r\n                                                    type=\"text\"\r\n                                                    lable=\"PhoneNo*\"\r\n                                                    name=\"phoneNo\"\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"select\"\r\n                                                    lable=\"Select Course*\"\r\n                                                    name=\"course\"\r\n                                                    option={option}\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"country\"\r\n                                                    lable=\"Select Country*\"\r\n                                                    name=\"country\"\r\n                                                    option={CountryData}\r\n                                                    validate={validateCountry}\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"state\"\r\n                                                    lable=\"Select State*\"\r\n                                                    name=\"state\"\r\n                                                    option={StatesData}\r\n                                                    validate={validateState}\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"input\"\r\n                                                    type=\"text\"\r\n                                                    lable=\"City*\"\r\n                                                    name=\"city\"\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"checkbox\"\r\n                                                    lable=\"Skill*\"\r\n                                                    name=\"skill\"\r\n                                                    validate={validateSkills}\r\n                                                    options={checkBoxOptions}\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"input\"\r\n                                                    type=\"text\"\r\n                                                    lable=\"Pincode*\"\r\n                                                    name=\"pinCode\"\r\n                                                />\r\n\r\n                                                <FormikControl\r\n                                                    control=\"textarea\"\r\n                                                    lable=\"Address*\"\r\n                                                    name=\"address\"\r\n                                                />\r\n                                                <div className=\"text-center\">\r\n                                                    <Button\r\n                                                        className=\"button\"\r\n                                                        type=\"submit\"\r\n                                                        variant=\"success\"\r\n                                                        disabled={!formik.isValid}\r\n                                                    >\r\n                                                        Update\r\n                                                 </Button>\r\n                                                    <Button className=\"button\" type=\"reset\" variant=\"info\">\r\n                                                        Reset\r\n                                            </Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Form>\r\n                                    );\r\n                                }}\r\n                            </Formik>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </HeaderAndSidebar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\TableView.js",["173"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Header.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Country.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\States.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateRouter\\Auth.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateRouter\\PrivateRouter.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Forgot.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\ForgetToNew.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Slider.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\CreateBlog.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\ResetPassword.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\SingleBlog.js",["174","175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":2,"column":50,"nodeType":"182","messageId":"183","endLine":2,"endColumn":63},{"ruleId":"184","severity":1,"message":"185","line":27,"column":8,"nodeType":"186","endLine":27,"endColumn":10,"suggestions":"187"},{"ruleId":"184","severity":1,"message":"185","line":45,"column":8,"nodeType":"186","endLine":45,"endColumn":10,"suggestions":"188"},{"ruleId":"184","severity":1,"message":"185","line":21,"column":8,"nodeType":"186","endLine":21,"endColumn":10,"suggestions":"189"},{"ruleId":"180","severity":1,"message":"190","line":27,"column":11,"nodeType":"182","messageId":"183","endLine":27,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":22,"column":8,"nodeType":"186","endLine":22,"endColumn":10,"suggestions":"191"},{"ruleId":"180","severity":1,"message":"192","line":24,"column":12,"nodeType":"182","messageId":"183","endLine":24,"endColumn":19},{"ruleId":"180","severity":1,"message":"193","line":24,"column":21,"nodeType":"182","messageId":"183","endLine":24,"endColumn":31},{"ruleId":"184","severity":1,"message":"185","line":13,"column":8,"nodeType":"186","endLine":13,"endColumn":10,"suggestions":"194"},{"ruleId":"180","severity":1,"message":"195","line":10,"column":10,"nodeType":"182","messageId":"183","endLine":10,"endColumn":20},{"ruleId":"180","severity":1,"message":"196","line":21,"column":11,"nodeType":"182","messageId":"183","endLine":21,"endColumn":19},"no-native-reassign",["197"],"no-negated-in-lhs",["198"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["199"],["200"],["201"],"'onSubmit' is assigned a value but never used.",["202"],"'captcha' is assigned a value but never used.","'setCaptcha' is assigned a value but never used.",["203"],"'deleteBlog' is defined but never used.","'dispatch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"204","fix":"206"},{"desc":"204","fix":"207"},{"desc":"204","fix":"208"},{"desc":"204","fix":"209"},"Update the dependencies array to be: [dispatch]",{"range":"210","text":"211"},{"range":"212","text":"211"},{"range":"213","text":"211"},{"range":"214","text":"211"},{"range":"215","text":"211"},[790,792],"[dispatch]",[1382,1384],[697,699],[701,703],[341,343]]