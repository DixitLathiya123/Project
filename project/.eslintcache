[{"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Services\\header.js":"4","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Services\\isEmpty.js":"5","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\LandingPage.js":"6","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Reducer\\reducerIndex.js":"7","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Reducer\\appStateReducer.js":"8","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Reducer\\getBlogByIdReducer.js":"9","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Reducer\\getAllBlogReducer.js":"10","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\actionIndex.js":"11","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\comment.js":"12","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\changePassword.js":"13","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\createBlog.js":"14","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\countryAction.js":"15","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\contactUsAction.js":"16","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\deleteBlog.js":"17","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\forgetPassword.js":"18","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\getAllBlog.js":"19","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\getBlogById.js":"20","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\getUserById.js":"21","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\loginAction.js":"22","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\registerAction.js":"23","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\resetPassword.js":"24","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\stateAction.js":"25","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\updateProfileAction.js":"26","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Store\\Store.js":"27","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\rootReducer\\RootReducer.js":"28","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\State\\State.js":"29","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\FormikControl.js":"30","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Select.js":"31","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Textarea.js":"32","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Input.js":"33","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Radio.js":"34","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Checkbox.js":"35","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Datepicker.js":"36","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\States.js":"37","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Map.js":"38","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Country.js":"39","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\TextError.js":"40","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Header\\HeaderAndSidebar.js":"41","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Header\\SidebarData.js":"42","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Slider.js":"43","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Header\\Header.js":"44","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Footer\\Footer.js":"45","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Routes\\Routes.js":"46","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Routes\\PrivateRouter.js":"47","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Routes\\Auth.js":"48","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\AllBlog.js":"49","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\Dashbord.js":"50","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\ResetPassword.js":"51","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\SingleBlog.js":"52","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\TableView.js":"53","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\UpdateProfile.js":"54","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\Contact.js":"55","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\Error404.js":"56","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\ForgetToNew.js":"57","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\Forgot.js":"58","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\Home.js":"59","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\Login.js":"60","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\RegisterPage.js":"61","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\componentIndex.js":"62","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\screenIndex.js":"63","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\likeApi.js":"64","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\disLikeApi.js":"65"},{"size":287,"mtime":1609495248542,"results":"66","hashOfConfig":"67"},{"size":527,"mtime":1609843197644,"results":"68","hashOfConfig":"67"},{"size":361,"mtime":1609495253860,"results":"69","hashOfConfig":"67"},{"size":656,"mtime":1609825660889,"results":"70","hashOfConfig":"67"},{"size":121,"mtime":1609495219446,"results":"71","hashOfConfig":"67"},{"size":415,"mtime":1609843141140,"results":"72","hashOfConfig":"67"},{"size":234,"mtime":1609838308558,"results":"73","hashOfConfig":"67"},{"size":7997,"mtime":1609906035871,"results":"74","hashOfConfig":"67"},{"size":798,"mtime":1609839571450,"results":"75","hashOfConfig":"67"},{"size":773,"mtime":1609839571450,"results":"76","hashOfConfig":"67"},{"size":3712,"mtime":1609905898149,"results":"77","hashOfConfig":"67"},{"size":1537,"mtime":1609837586917,"results":"78","hashOfConfig":"67"},{"size":1652,"mtime":1609837595066,"results":"79","hashOfConfig":"67"},{"size":1479,"mtime":1609837667799,"results":"80","hashOfConfig":"67"},{"size":1145,"mtime":1609837675327,"results":"81","hashOfConfig":"67"},{"size":1411,"mtime":1609837602015,"results":"82","hashOfConfig":"67"},{"size":1634,"mtime":1609840168155,"results":"83","hashOfConfig":"67"},{"size":1361,"mtime":1609837655638,"results":"84","hashOfConfig":"67"},{"size":1172,"mtime":1609906546826,"results":"85","hashOfConfig":"67"},{"size":1223,"mtime":1609837644845,"results":"86","hashOfConfig":"67"},{"size":1223,"mtime":1609837636764,"results":"87","hashOfConfig":"67"},{"size":1636,"mtime":1609903626078,"results":"88","hashOfConfig":"67"},{"size":1489,"mtime":1609836620442,"results":"89","hashOfConfig":"67"},{"size":1436,"mtime":1609837626226,"results":"90","hashOfConfig":"67"},{"size":1114,"mtime":1609837694264,"results":"91","hashOfConfig":"67"},{"size":1726,"mtime":1609914818251,"results":"92","hashOfConfig":"67"},{"size":318,"mtime":1609840177950,"results":"93","hashOfConfig":"67"},{"size":346,"mtime":1609839615614,"results":"94","hashOfConfig":"67"},{"size":1087,"mtime":1609905935506,"results":"95","hashOfConfig":"67"},{"size":953,"mtime":1609494296036,"results":"96","hashOfConfig":"67"},{"size":812,"mtime":1609841867908,"results":"97","hashOfConfig":"67"},{"size":476,"mtime":1609494344681,"results":"98","hashOfConfig":"67"},{"size":528,"mtime":1609913462500,"results":"99","hashOfConfig":"67"},{"size":1059,"mtime":1609841863902,"results":"100","hashOfConfig":"67"},{"size":1730,"mtime":1609915883904,"results":"101","hashOfConfig":"67"},{"size":1155,"mtime":1609841852211,"results":"102","hashOfConfig":"67"},{"size":891,"mtime":1609841906695,"results":"103","hashOfConfig":"67"},{"size":647,"mtime":1609494309974,"results":"104","hashOfConfig":"67"},{"size":890,"mtime":1609841843786,"results":"105","hashOfConfig":"67"},{"size":422,"mtime":1609742807625,"results":"106","hashOfConfig":"67"},{"size":2270,"mtime":1609842001290,"results":"107","hashOfConfig":"67"},{"size":618,"mtime":1609842003529,"results":"108","hashOfConfig":"67"},{"size":1400,"mtime":1609842862804,"results":"109","hashOfConfig":"67"},{"size":965,"mtime":1609841760069,"results":"110","hashOfConfig":"67"},{"size":430,"mtime":1609841814229,"results":"111","hashOfConfig":"67"},{"size":1898,"mtime":1609910381772,"results":"112","hashOfConfig":"67"},{"size":593,"mtime":1609843141582,"results":"113","hashOfConfig":"67"},{"size":201,"mtime":1609843139602,"results":"114","hashOfConfig":"67"},{"size":2572,"mtime":1609910816815,"results":"115","hashOfConfig":"67"},{"size":8460,"mtime":1609904005202,"results":"116","hashOfConfig":"67"},{"size":3785,"mtime":1609910418568,"results":"117","hashOfConfig":"67"},{"size":8430,"mtime":1609910039453,"results":"118","hashOfConfig":"67"},{"size":264,"mtime":1609903638772,"results":"119","hashOfConfig":"67"},{"size":11466,"mtime":1609916025685,"results":"120","hashOfConfig":"67"},{"size":6390,"mtime":1609846251864,"results":"121","hashOfConfig":"67"},{"size":169,"mtime":1609843458030,"results":"122","hashOfConfig":"67"},{"size":3555,"mtime":1609846227190,"results":"123","hashOfConfig":"67"},{"size":2572,"mtime":1609846241638,"results":"124","hashOfConfig":"67"},{"size":6277,"mtime":1609846333259,"results":"125","hashOfConfig":"67"},{"size":3659,"mtime":1609846266818,"results":"126","hashOfConfig":"67"},{"size":12668,"mtime":1609846270894,"results":"127","hashOfConfig":"67"},{"size":842,"mtime":1609846122142,"results":"128","hashOfConfig":"67"},{"size":844,"mtime":1609845942103,"results":"129","hashOfConfig":"67"},{"size":1481,"mtime":1609903156743,"results":"130","hashOfConfig":"67"},{"size":1533,"mtime":1609908451626,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},"vrpkdh",{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"134"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"134"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"134"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\index.js",[],["266","267"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Services\\header.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Services\\isEmpty.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\LandingPage.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Reducer\\reducerIndex.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Reducer\\appStateReducer.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Reducer\\getBlogByIdReducer.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Reducer\\getAllBlogReducer.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\actionIndex.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\comment.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\changePassword.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\createBlog.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\countryAction.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\contactUsAction.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\deleteBlog.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\forgetPassword.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\getAllBlog.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\getBlogById.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\getUserById.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\loginAction.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\registerAction.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\resetPassword.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\stateAction.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\updateProfileAction.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Store\\Store.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\rootReducer\\RootReducer.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\State\\State.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\FormikControl.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Select.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Textarea.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Input.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Radio.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Checkbox.js",["268","269","270","271"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Datepicker.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\States.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Map.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Country.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\TextError.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Header\\HeaderAndSidebar.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Header\\SidebarData.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Pages\\Slider.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Header\\Header.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\Footer\\Footer.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Routes\\Routes.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Routes\\PrivateRouter.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Routes\\Auth.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\AllBlog.js",["272","273"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\Dashbord.js",["274","275"],"import React, { useEffect, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Card } from 'antd';\r\nimport { Formik, Form } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport Loader from 'react-loader-spinner'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from 'react-bootstrap/Modal'\r\n\r\nimport { isEmpty } from '../../Services/isEmpty'\r\nimport deleteButton from '../../Assets/Image/delete.png'\r\nimport {HeaderAndSidebar,FormikControl} from '../../Components/componentIndex'\r\nimport { createBlog, deleteBlog, getBlogById, singleBlog, } from '../../Action/actionIndex';\r\n\r\nfunction Dashbord() {\r\n    const { Meta } = Card;\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const [selectedFile, setselectedFile] = useState()\r\n\r\n    useEffect(() => {\r\n        dispatch(getBlogById())\r\n    }, [])\r\n    const blogById = useSelector(state => state.getBlogById.blogById.blog)\r\n\r\n    const deleteBlogById = (deleteId) => {\r\n        dispatch(deleteBlog(deleteId))\r\n    }\r\n\r\n    const initialValues = {\r\n        blogTitle: '',\r\n        blogContent: '',\r\n        file: selectedFile\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        blogTitle: Yup.string().required('Blog Title Required*'),\r\n        blogContent: Yup.string().required('Blog Content Required*'),\r\n    })\r\n\r\n    const onSubmit = (values, onSubmitProps) => {\r\n        let formData = new FormData();\r\n        formData.append('blogTitle', values.blogTitle);\r\n        formData.append('blogContent', values.blogContent);\r\n        formData.append('file', selectedFile);\r\n        \r\n        dispatch(createBlog(formData, onSubmitProps))\r\n        setTimeout(() => {\r\n            dispatch(getBlogById())\r\n            handleClose()\r\n        }, 2000);\r\n    }\r\n    const fileChangeHandler = (e) => {\r\n        setselectedFile(e.target.files[0])\r\n    } \r\n\r\n    return (\r\n        < div >\r\n            <HeaderAndSidebar title=\"dashbord\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12  blogbutton\">\r\n                        <Button className=\"blogbutton2\" variant=\"dark\" onClick={() => { handleShow() }}>Create Blog</Button >\r\n                    </div>\r\n                </div>\r\n                <div className=\"row allblog\">\r\n                    {isEmpty(blogById) &&\r\n                        <div className=\"loader\">\r\n                            <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\r\n                        </div>\r\n                    }\r\n                    {\r\n                        !isEmpty(blogById) &&\r\n                        blogById.map((item, i) => {\r\n                            return (\r\n                                <>\r\n                                    <Card className=\"blogcard\" key={i}\r\n                                        hoverable\r\n                                        style={{ width: 320 }}\r\n                                        cover={\r\n                                            <img\r\n                                                height=\"250px\"\r\n                                                alt=\"example\"\r\n                                                onClick={() => {\r\n                                                    localStorage.setItem('singleBlogId',item._id)\r\n                                                    setTimeout(() => {\r\n                                                        history.push(\"/singleBlog\")\r\n                                                    }, 1000);\r\n                                                }}\r\n\r\n                                                src={process.env.REACT_APP_API +\"/\"+item.blogImagePath}\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-8\">\r\n                                                <Meta className=\"blogContent\" title={item.blogTitle} description={item.blogContent} />\r\n                                            </div>\r\n                                            <div className=\"col-4\">\r\n                                                <div className=\"row \">\r\n                                                    <div className=\"deleteButton\">\r\n                                                        <img src={deleteButton} alt=\"delete\" height=\"95%\" width=\"30%\" onClick={() => { deleteBlogById(item._id) }} />\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Card>\r\n                                </>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n\r\n\r\n                <Modal show={show} onHide={() => { handleClose() }} className=\"modal\">\r\n                    <Modal.Header closeButton style={{ \"outline\": \"none\" }}>\r\n                        <Modal.Title>Create Blog</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"loginpopup\">\r\n                            <div className=\"row\" style={{ \"justifyContent\": \"center\" }}>\r\n                                <div className=\"form col-6\" >\r\n                                    <Formik\r\n                                        initialValues={initialValues}\r\n                                        validationSchema={validationSchema}\r\n                                        onSubmit={onSubmit}\r\n                                    >\r\n                                        {\r\n                                            (formik) => {\r\n                                                return (\r\n                                                    <Form>\r\n                                                        <h1 align=\"center\">Create Blog</h1>\r\n                                                        <FormikControl\r\n                                                            control=\"input\"\r\n                                                            type=\"text\"\r\n                                                            lable=\"Blog Title*\"\r\n                                                            name=\"blogTitle\"\r\n                                                        />\r\n\r\n                                                        <FormikControl\r\n                                                            control=\"input\"\r\n                                                            type=\"text\"\r\n                                                            lable=\"Blog Content*\"\r\n                                                            name=\"blogContent\"\r\n                                                        />\r\n\r\n                                                        <FormikControl\r\n                                                            control=\"input\"\r\n                                                            type=\"file\"\r\n                                                            lable=\"Blog Image*\"\r\n                                                            name=\"file\"\r\n                                                            onChange = {(e) => fileChangeHandler(e)}\r\n                                                        />\r\n\r\n                                                        <div className=\"btndiv\">\r\n                                                            <Button className=\"button\" type=\"submit\" variant=\"info\" >Create</Button>\r\n                                                        </div>\r\n                                                    </Form>\r\n                                                )\r\n                                            }\r\n                                        }\r\n                                    </Formik>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </HeaderAndSidebar>\r\n        </div >\r\n    )\r\n}\r\nexport default Dashbord","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\ResetPassword.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\SingleBlog.js",["276"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\TableView.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PrivatePages\\UpdateProfile.js",["277","278"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\Contact.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\Error404.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\ForgetToNew.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\Forgot.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\Home.js",["279"],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Card } from 'antd';\r\nimport { Formik, Form } from 'formik'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup'\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Loader from 'react-loader-spinner'\r\n\r\nimport { isEmpty } from '../../Services/isEmpty'\r\nimport { isAuthenticated } from '../../Routes/Auth'\r\nimport {Header,FormikControl, Slider} from '../../Components/componentIndex'\r\nimport { getAllBlog ,userGoingForLogin} from '../../Action/actionIndex'\r\nimport Like from '../../Assets/Image/likeImage.png'\r\nimport disLike from '../../Assets/Image/dislike.png'\r\nimport comment from '../../Assets/Image/comment.png'\r\n\r\n\r\nfunction Home(props) {\r\n    const history = useHistory()\r\n\r\n    if (isAuthenticated() !== false) {\r\n        history.push(\"/dashbord\")\r\n    }\r\n\r\n    const { Meta } = Card;\r\n    const dispatch = useDispatch()\r\n\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    const Blog = useSelector(state => state.getAllBlog.Blogs.blogList)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllBlog())\r\n    }, [])\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        email: Yup.string().email('Invalid Format*').required('Email Required*'),\r\n        password: Yup.string().length(6).required('Password Required*')\r\n    })\r\n\r\n    const onSubmit = values => dispatch(userGoingForLogin(values, props))\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Slider />\r\n            <div className=\"row allblog\">\r\n                {isEmpty(Blog) &&\r\n                    <div className=\"loader\">\r\n                        <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\r\n                    </div>\r\n                }\r\n                {\r\n                    !isEmpty(Blog) && Blog.map((item, i) => {\r\n                        return (\r\n                            <>\r\n                                <Card key={i}\r\n                                    className=\"blogimage\"\r\n                                    hoverable\r\n                                    style={{ width: 300 }}\r\n                                    cover={<img alt=\"example\" src=\"https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png\" />}\r\n                                >\r\n                                    <Meta className=\"blogContent\" title={item.blogTitle} description={item.blogContent} />\r\n                                    <div className=\"row social\">\r\n                                        <button className=\"likeDislikeButton\" onClick={() => { handleShow() }}><img hoverable src={Like} alt=\"like\" height=\"100%\" width=\"100%\" /></button>\r\n                                        <button className=\"likeDislikeButton\" onClick={() => { handleShow() }}><img hoverable src={disLike} alt=\"dislike\" height=\"100%\" width=\"100%\" /></button>\r\n                                        <button className=\"likeDislikeButton\" onClick={() => { handleShow() }}><img hoverable src={comment} alt=\"comment\" height=\"100%\" width=\"100%\" /></button>\r\n                                    </div>\r\n                                </Card>\r\n                            </>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <Modal show={show} onHide={() => { handleClose() }} className=\"modal\">\r\n                <Modal.Header closeButton  style={{\"outline\": \"none\"}}>\r\n                    <Modal.Title>Sign In</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className=\"loginpopup\">\r\n                        <div className=\"row\" style={{ \"justifyContent\": \"center\" }}>\r\n                            <div className=\"form col-6\" >\r\n                                <Formik\r\n                                    initialValues={initialValues}\r\n                                    validationSchema={validationSchema}\r\n                                    onSubmit={onSubmit}\r\n                                >\r\n                                    {\r\n                                        (formik) => {\r\n                                            return (\r\n                                                <Form>\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"email\"\r\n                                                        lable=\"Email*\"\r\n                                                        name=\"email\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"password\"\r\n                                                        lable=\"Password*\"\r\n                                                        name=\"password\"\r\n                                                    />\r\n                                                    <div className=\"btndiv\">\r\n                                                        <Button className=\"button\" type=\"submit\" variant=\"info\">Login</Button>\r\n                                                        <Button className=\"button\" variant=\"info\" onClick={() => { history.push(`/register`); }}>Register</Button >\r\n                                                    </div>\r\n                                                    <div className=\"forgot\"><Link to=\"forgot\">Forgot password?</Link></div>\r\n                                                </Form>\r\n                                            )\r\n                                        }\r\n                                    }\r\n                                </Formik>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\Login.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\PublicPages\\RegisterPage.js",["280"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Recaptcha from \"react-google-recaptcha\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport {Header,FormikControl} from '../../Components/componentIndex'\r\nimport { isAuthenticated } from '../../Routes/Auth'\r\nimport { userGoingForRegister, getAllCountry, getAllstate } from \"../../Action/actionIndex\";\r\nimport { isEmpty } from \"../../Services/isEmpty\";\r\n\r\nconst option = [\r\n    { key: \"Select Course\", value: \"\" },\r\n    { key: \"BCA\", value: \"bca\" },\r\n    { key: \"BBA\", value: \"bba\" },\r\n    { key: \"BCOM\", value: \"bcom\" },\r\n];\r\nconst checkBoxOptions = [\r\n    { key: \"Cricket\", value: \"cricket\" },\r\n    { key: \"Reading\", value: \"reading\" },\r\n];\r\n\r\nfunction Register(props) {\r\n    const history = useHistory()\r\n\r\n    if (isAuthenticated() !== false) {\r\n        history.push(\"/dashbord\")\r\n    }\r\n    const dispatch = useDispatch();\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n    const CountryData = useSelector(state => state.initialState.countries.CountryData)\r\n    const StatesData = useSelector(state => state.initialState.states.StateData)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCountry())\r\n    }, [])\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        phoneNo: \"\",\r\n        pinCode: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        course: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        country: \"\",\r\n        address: \"\",\r\n        skill: [],\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required(\"Name required *\"),\r\n        pinCode: Yup.number()\r\n            .typeError(\"Only Number Allowed\")\r\n            .required(\"Pincode required *\"),\r\n        email: Yup.string().email(\"Invalid Format*\").required(\"Email required *\"),\r\n        password: Yup.string().length(6).required(\"Password required *\"),\r\n        confirmPassword: Yup.string()\r\n            .oneOf([Yup.ref(\"password\")], \"password miss match*\")\r\n            .required(\"ConfimPassword required *\"),\r\n        course: Yup.string().required(\"Course required *\"),\r\n        city: Yup.string().required(\"City required *\"),\r\n        address: Yup.string().required(\"Address required *\"),\r\n    });\r\n\r\n    const validateSkills = (values) => {\r\n        let error;\r\n        if (values.length === 0) {\r\n            error = \"Required!\";\r\n        }\r\n        return error;\r\n    };\r\n    const validateCountry = (values) => {\r\n        let error;\r\n        if (values === '') {\r\n            error = \"Required!\";\r\n        }\r\n        else {\r\n            dispatch(getAllstate(values));\r\n        }\r\n        return error;\r\n    };\r\n    const validateState = (values) => {\r\n        let error;\r\n        if (values === '') {\r\n            error = \"Required!\";\r\n        }\r\n        return error;\r\n    };\r\n    const phoneValidate = (phone) => {\r\n        isNaN(phone)\r\n        let error;\r\n        if (isEmpty(phone)) {\r\n            error = \"phoneNo required!\"\r\n        }\r\n        else if (phone.length !== 10) {\r\n            error = \"phoneNo length must be 10\"\r\n        }\r\n        if (isNaN(phone) === true) {\r\n            error = \"Only Number Allowed\"\r\n        }\r\n        return error\r\n    }\r\n    const pinValidate = (pin) => {\r\n        isNaN(pin)\r\n        let error;\r\n        if (isEmpty(pin)) {\r\n            error = \"pinNo required!\"\r\n        }\r\n        else if (pin.length !== 6) {\r\n            error = \"pinNo length must be 6\"\r\n        }\r\n        if (isNaN(pin) === true) {\r\n            error = \"Only Number Allowed\"\r\n        }\r\n        return error\r\n    }\r\n\r\n    const onSubmit = (values) => dispatch(userGoingForRegister(values, props));\r\n    const handlecaptcha = (e) => setCaptcha(e);\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <ToastContainer />\r\n            <Card className=\"card\">\r\n                <Card.Body className=\"cardbody\">\r\n                    <div className=\"row\">\r\n                        <div className=\"form col-8\">\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                validationSchema={validationSchema}\r\n                                onSubmit={onSubmit}\r\n                            >\r\n                                {(formik) => {\r\n                                    return (\r\n                                        <Form>\r\n                                            <h1 align=\"center\">Sign Up</h1>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-6\">\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"Name*\"\r\n                                                        name=\"name\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"email\"\r\n                                                        lable=\"Email*\"\r\n                                                        name=\"email\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"PhoneNo*\"\r\n                                                        name=\"phoneNo\"\r\n                                                        validate={phoneValidate}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"select\"\r\n                                                        lable=\"Select Course*\"\r\n                                                        name=\"course\"\r\n                                                        option={option}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"country\"\r\n                                                        lable=\"Select Country*\"\r\n                                                        name=\"country\"\r\n                                                        option={CountryData}\r\n                                                        validate={validateCountry}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"state\"\r\n                                                        lable=\"Select State*\"\r\n                                                        name=\"state\"\r\n                                                        option={StatesData}\r\n                                                        validate={validateState}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"City*\"\r\n                                                        name=\"city\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-6\">\r\n                                                    <FormikControl\r\n                                                        control=\"checkbox\"\r\n                                                        lable=\"Skill*\"\r\n                                                        name=\"skill\"\r\n                                                        validate={validateSkills}\r\n                                                        options={checkBoxOptions}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"Pincode*\"\r\n                                                        name=\"pinCode\"\r\n                                                        validate={pinValidate}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"password\"\r\n                                                        lable=\"Password*\"\r\n                                                        name=\"password\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"password\"\r\n                                                        lable=\"Confirm Password*\"\r\n                                                        name=\"confirmPassword\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"textarea\"\r\n                                                        lable=\"Address*\"\r\n                                                        name=\"address\"\r\n                                                    />\r\n                                                    <label htmlFor=\"captcha\">Captcha</label>\r\n                                                    <Recaptcha\r\n                                                        sitekey=\"6Lf-RwsaAAAAAP42dLJgYMQ8K6oK4xmrFG_NUSWP\"\r\n                                                        render=\"explicit\"\r\n                                                        onChange={(e) => {\r\n                                                            handlecaptcha(e);\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-center\">\r\n                                                <Button\r\n                                                    className=\"button\"\r\n                                                    type=\"submit\"\r\n                                                    variant=\"success\"\r\n                                                    disabled={!formik.isValid || captcha === \"\"}\r\n                                                >\r\n                                                    Submit\r\n                                                 </Button>\r\n                                                <Button className=\"button\" type=\"reset\" variant=\"info\">\r\n                                                    Reset\r\n                                            </Button>\r\n                                            </div>\r\n                                        </Form>\r\n                                    );\r\n                                }}\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"image col-4\">\r\n                            <img\r\n                                src=\"https://i.pinimg.com/originals/f1/a3/c0/f1a3c03479f4437eb83d26eb1f13ae71.png\"\r\n                                height=\"80%\"\r\n                                width=\"85%\"\r\n                                alt=\"Login With Social Media\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default Register","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Components\\componentIndex.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Screen\\screenIndex.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\likeApi.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Action\\disLikeApi.js",[],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":25,"column":82,"nodeType":"287","messageId":"288","endLine":25,"endColumn":84},{"ruleId":"285","severity":1,"message":"286","line":25,"column":118,"nodeType":"287","messageId":"288","endLine":25,"endColumn":120},{"ruleId":"285","severity":1,"message":"289","line":25,"column":118,"nodeType":"287","messageId":"288","endLine":25,"endColumn":120},{"ruleId":"285","severity":1,"message":"289","line":25,"column":136,"nodeType":"287","messageId":"288","endLine":25,"endColumn":138},{"ruleId":"290","severity":1,"message":"291","line":8,"column":22,"nodeType":"292","messageId":"293","endLine":8,"endColumn":32},{"ruleId":"294","severity":1,"message":"295","line":16,"column":8,"nodeType":"296","endLine":16,"endColumn":10,"suggestions":"297"},{"ruleId":"290","severity":1,"message":"291","line":14,"column":47,"nodeType":"292","messageId":"293","endLine":14,"endColumn":57},{"ruleId":"294","severity":1,"message":"295","line":29,"column":8,"nodeType":"296","endLine":29,"endColumn":10,"suggestions":"298"},{"ruleId":"294","severity":1,"message":"295","line":26,"column":8,"nodeType":"296","endLine":26,"endColumn":10,"suggestions":"299"},{"ruleId":"290","severity":1,"message":"300","line":1,"column":28,"nodeType":"292","messageId":"293","endLine":1,"endColumn":36},{"ruleId":"294","severity":1,"message":"301","line":20,"column":8,"nodeType":"296","endLine":20,"endColumn":10,"suggestions":"302"},{"ruleId":"294","severity":1,"message":"295","line":38,"column":8,"nodeType":"296","endLine":38,"endColumn":10,"suggestions":"303"},{"ruleId":"294","severity":1,"message":"295","line":41,"column":8,"nodeType":"296","endLine":41,"endColumn":10,"suggestions":"304"},"no-native-reassign",["305"],"no-negated-in-lhs",["306"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-unused-vars","'singleBlog' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["307"],["308"],["309"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'updateData'. Either include them or remove the dependency array.",["310"],["311"],["312"],"no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"313","fix":"315"},{"desc":"313","fix":"316"},{"desc":"317","fix":"318"},{"desc":"313","fix":"319"},{"desc":"313","fix":"320"},"Update the dependencies array to be: [dispatch]",{"range":"321","text":"322"},{"range":"323","text":"322"},{"range":"324","text":"322"},"Update the dependencies array to be: [dispatch, updateData]",{"range":"325","text":"326"},{"range":"327","text":"322"},{"range":"328","text":"322"},[565,567],"[dispatch]",[1052,1054],[1041,1043],[782,784],"[dispatch, updateData]",[1298,1300],[1444,1446]]