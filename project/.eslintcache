[{"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\index.js":"1","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\reportWebVitals.js":"3","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Routing.js":"4","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\FormikControl.js":"5","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Input.js":"6","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Textarea.js":"7","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Select.js":"8","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Radio.js":"9","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Checkbox.js":"10","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Datepicker.js":"11","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\TextError.js":"12","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Actions.js":"13","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Store.js":"14","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Reducers.js":"15","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\State.js":"16","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Login.js":"17","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Contact.js":"18","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Home.js":"19","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Error404.js":"20","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\RegisterPage.js":"21","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\RootReducer.js":"22","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Map.js":"23","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\Dashbord.js":"24","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Header\\HeaderAndSidebar.js":"25","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Header\\SidebarData.js":"26","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\UpdateProfile.js":"27","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\TableView.js":"28","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Header.js":"29","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Country.js":"30","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\States.js":"31","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateRouter\\Auth.js":"32","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateRouter\\PrivateRouter.js":"33","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Forgot.js":"34","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\ForgetToNew.js":"35","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Slider.js":"36","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\CreateBlog.js":"37","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\ResetPassword.js":"38","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\SingleBlog.js":"39","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Services\\header.js":"40","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Services\\isEmpty.js":"41"},{"size":287,"mtime":1609495248542,"results":"42","hashOfConfig":"43"},{"size":512,"mtime":1609500822160,"results":"44","hashOfConfig":"43"},{"size":361,"mtime":1609495253860,"results":"45","hashOfConfig":"43"},{"size":2296,"mtime":1609562636091,"results":"46","hashOfConfig":"43"},{"size":953,"mtime":1609494296036,"results":"47","hashOfConfig":"43"},{"size":492,"mtime":1609494299570,"results":"48","hashOfConfig":"43"},{"size":476,"mtime":1609494344681,"results":"49","hashOfConfig":"43"},{"size":819,"mtime":1609494323518,"results":"50","hashOfConfig":"43"},{"size":1066,"mtime":1609494314779,"results":"51","hashOfConfig":"43"},{"size":1599,"mtime":1609494279630,"results":"52","hashOfConfig":"43"},{"size":1162,"mtime":1609494291255,"results":"53","hashOfConfig":"43"},{"size":185,"mtime":1609494349459,"results":"54","hashOfConfig":"43"},{"size":17869,"mtime":1609563028047,"results":"55","hashOfConfig":"43"},{"size":219,"mtime":1609148933952,"results":"56","hashOfConfig":"43"},{"size":10055,"mtime":1609495182081,"results":"57","hashOfConfig":"43"},{"size":1508,"mtime":1609402400932,"results":"58","hashOfConfig":"43"},{"size":3666,"mtime":1609562223768,"results":"59","hashOfConfig":"43"},{"size":6005,"mtime":1609501507669,"results":"60","hashOfConfig":"43"},{"size":6546,"mtime":1609564962614,"results":"61","hashOfConfig":"43"},{"size":169,"mtime":1609494388285,"results":"62","hashOfConfig":"43"},{"size":11809,"mtime":1609494682003,"results":"63","hashOfConfig":"43"},{"size":932,"mtime":1609402537678,"results":"64","hashOfConfig":"43"},{"size":647,"mtime":1609494309974,"results":"65","hashOfConfig":"43"},{"size":7368,"mtime":1609564935816,"results":"66","hashOfConfig":"43"},{"size":2266,"mtime":1609562163193,"results":"67","hashOfConfig":"43"},{"size":454,"mtime":1609493369618,"results":"68","hashOfConfig":"43"},{"size":9198,"mtime":1609562181991,"results":"69","hashOfConfig":"43"},{"size":613,"mtime":1609494180651,"results":"70","hashOfConfig":"43"},{"size":985,"mtime":1609562201375,"results":"71","hashOfConfig":"43"},{"size":897,"mtime":1609494283652,"results":"72","hashOfConfig":"43"},{"size":891,"mtime":1609494338718,"results":"73","hashOfConfig":"43"},{"size":201,"mtime":1609393103111,"results":"74","hashOfConfig":"43"},{"size":593,"mtime":1609562557814,"results":"75","hashOfConfig":"43"},{"size":2581,"mtime":1609494484118,"results":"76","hashOfConfig":"43"},{"size":3565,"mtime":1609494442685,"results":"77","hashOfConfig":"43"},{"size":1352,"mtime":1609494334733,"results":"78","hashOfConfig":"43"},{"size":3597,"mtime":1609560848926,"results":"79","hashOfConfig":"43"},{"size":3820,"mtime":1609493503556,"results":"80","hashOfConfig":"43"},{"size":8467,"mtime":1609562177595,"results":"81","hashOfConfig":"43"},{"size":242,"mtime":1609563259389,"results":"82","hashOfConfig":"43"},{"size":121,"mtime":1609495219446,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"vrpkdh",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\index.js",[],["170","171"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Routing.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\FormikControl.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Input.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Textarea.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Select.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Radio.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Checkbox.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Datepicker.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\TextError.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Actions.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Store.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\Reducers.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\State.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Login.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Contact.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Home.js",["172"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Error404.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\RegisterPage.js",["173"],"import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\n\r\n\r\n\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Recaptcha from \"react-google-recaptcha\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport FormikControl from \"../Pages/FormikControl\";\r\nimport Header from \"./Header\";\r\nimport { isAuthenticated } from '../../PrivateRouter/Auth'\r\nimport { userGoingForRegister, getAllCountry, getAllstate } from \"../../Redux/Actions\";\r\n\r\nconst option = [\r\n    { key: \"Select Course\", value: \"\" },\r\n    { key: \"BCA\", value: \"bca\" },\r\n    { key: \"BBA\", value: \"bba\" },\r\n    { key: \"BCOM\", value: \"bcom\" },\r\n];\r\nconst checkBoxOptions = [\r\n    { key: \"Cricket\", value: \"cricket\" },\r\n    { key: \"Reading\", value: \"reading\" },\r\n];\r\n\r\nfunction Register(props) {\r\n    const history = useHistory()\r\n\r\n    if (isAuthenticated() !== false) {\r\n        history.push(\"/\")\r\n    }\r\n    const dispatch = useDispatch();\r\n    const [captcha, setCaptcha] = useState(\"\");\r\n    const CountryData = useSelector(state => state.country.CountryData)\r\n    const StatesData = useSelector(state => state.states.StateData)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllCountry())\r\n    }, [])\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        phoneNo: \"\",\r\n        pinCode: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        course: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        country: \"\",\r\n        address: \"\",\r\n        skill: [],\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required(\"Name required *\"),\r\n        phoneNo: Yup.number()\r\n            .typeError(\"Only Number Allowed\")\r\n            .required(\"PhoneNo required *\"),\r\n        pinCode: Yup.number()\r\n            .typeError(\"Only Number Allowed\")\r\n            .required(\"Pincode required *\"),\r\n        email: Yup.string().email(\"Invalid Format*\").required(\"Email required *\"),\r\n        password: Yup.string().length(6).required(\"Password required *\"),\r\n        confirmPassword: Yup.string()\r\n            .oneOf([Yup.ref(\"password\")], \"password miss match*\")\r\n            .required(\"ConfimPassword required *\"),\r\n        course: Yup.string().required(\"Course required *\"),\r\n        city: Yup.string().required(\"City required *\"),\r\n        address: Yup.string().required(\"Address required *\"),\r\n    });\r\n\r\n    const validateSkills = (values) => {\r\n        let error;\r\n        if (values.length === 0) {\r\n            error = \"Required!\";\r\n        }\r\n        return error;\r\n    };\r\n    const validateCountry = (values) => {\r\n        let error;\r\n        if (values === '') {\r\n            error = \"Required!\";\r\n        }\r\n        else {\r\n            dispatch(getAllstate(values));\r\n        }\r\n        return error;\r\n    };\r\n    const validateState = (values) => {\r\n        let error;\r\n        if (values === '') {\r\n            error = \"Required!\";\r\n        }\r\n        return error;\r\n    };\r\n\r\n    const onSubmit = (values) =>  dispatch(userGoingForRegister(values, props));\r\n    const handlecaptcha = (e) => setCaptcha(e);\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <ToastContainer />\r\n            <Card className=\"card\">\r\n                <Card.Body className=\"cardbody\">\r\n                    <div className=\"row\">\r\n                        <div className=\"form col-8\">\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                validationSchema={validationSchema}\r\n                                onSubmit={onSubmit}\r\n                            >\r\n                                {(formik) => {\r\n                                    return (\r\n                                        <Form>\r\n                                            <h1 align=\"center\">Sign Up</h1>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-6\">\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"Name*\"\r\n                                                        name=\"name\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"email\"\r\n                                                        lable=\"Email*\"\r\n                                                        name=\"email\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"PhoneNo*\"\r\n                                                        name=\"phoneNo\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"select\"\r\n                                                        lable=\"Select Course*\"\r\n                                                        name=\"course\"\r\n                                                        option={option}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"country\"\r\n                                                        lable=\"Select Country*\"\r\n                                                        name=\"country\"\r\n                                                        option={CountryData}\r\n                                                        validate={validateCountry}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"state\"\r\n                                                        lable=\"Select State*\"\r\n                                                        name=\"state\"\r\n                                                        option={StatesData}\r\n                                                        validate={validateState}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"City*\"\r\n                                                        name=\"city\"\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"col-6\">\r\n                                                    <FormikControl\r\n                                                        control=\"checkbox\"\r\n                                                        lable=\"Skill*\"\r\n                                                        name=\"skill\"\r\n                                                        validate={validateSkills}\r\n                                                        options={checkBoxOptions}\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"text\"\r\n                                                        lable=\"Pincode*\"\r\n                                                        name=\"pinCode\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"password\"\r\n                                                        lable=\"Password*\"\r\n                                                        name=\"password\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"input\"\r\n                                                        type=\"password\"\r\n                                                        lable=\"Confirm Password*\"\r\n                                                        name=\"confirmPassword\"\r\n                                                    />\r\n                                                    <FormikControl\r\n                                                        control=\"textarea\"\r\n                                                        lable=\"Address*\"\r\n                                                        name=\"address\"\r\n                                                    />\r\n                                                    <label htmlFor=\"captcha\">Captcha</label>\r\n                                                    <Recaptcha\r\n                                                        sitekey=\"6Lf-RwsaAAAAAP42dLJgYMQ8K6oK4xmrFG_NUSWP\"\r\n                                                        render=\"explicit\"\r\n                                                        onChange={(e) => {\r\n                                                            handlecaptcha(e);\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"text-center\">\r\n                                                <Button\r\n                                                    className=\"button\"\r\n                                                    type=\"submit\"\r\n                                                    variant=\"success\"\r\n                                                    disabled={!formik.isValid || captcha === \"\"}\r\n                                                >\r\n                                                    Submit\r\n                                                 </Button>\r\n                                                <Button className=\"button\" type=\"reset\" variant=\"info\">\r\n                                                    Reset\r\n                                            </Button>\r\n                                            </div>\r\n                                        </Form>\r\n                                    );\r\n                                }}\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"image col-4\">\r\n                            <img\r\n                                src=\"https://i.pinimg.com/originals/f1/a3/c0/f1a3c03479f4437eb83d26eb1f13ae71.png\"\r\n                                height=\"80%\"\r\n                                width=\"85%\"\r\n                                alt=\"Login With Social Media\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\nexport default Register","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Redux\\RootReducer.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Map.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\Dashbord.js",["174"],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Header\\HeaderAndSidebar.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Header\\SidebarData.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\UpdateProfile.js",["175","176"],"import React, { useEffect, useState } from 'react'\r\nimport { Formik, Form } from \"formik\";\r\nimport { Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport FormikControl from \"../../PublicFolder/Pages/FormikControl\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUserById, getAllCountry, getAllstate ,updateProfile } from '../../Redux/Actions';\r\nimport HeaderAndSidebar from '../Header/HeaderAndSidebar'\r\nimport * as Yup from \"yup\";\r\n\r\nfunction UpdateProfile() {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserById())\r\n        dispatch(getAllCountry())\r\n    }, [])\r\n\r\n    const CountryData = useSelector(state => state.country.CountryData)\r\n    const StatesData = useSelector(state => state.states.StateData)\r\n\r\n    const option = [\r\n        { key: \"Select Course\", value: \"\" },\r\n        { key: \"BCA\", value: \"bca\" },\r\n        { key: \"BBA\", value: \"bba\" },\r\n        { key: \"BCOM\", value: \"bcom\" },\r\n    ];\r\n\r\n    const checkBoxOptions = [\r\n        { key: \"Cricket\", value: \"cricket\" },\r\n        { key: \"Reading\", value: \"reading\" },\r\n    ];\r\n\r\n    const initialValues = {\r\n        name: \"\",\r\n        phoneNo: \"\",\r\n        pinCode: \"\",\r\n        email: \"\",\r\n        course: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        country: \"\",\r\n        address: \"\",\r\n        skill: [],\r\n    };\r\n\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required(\"Name required *\"),\r\n        phoneNo: Yup.number()\r\n            .typeError(\"Only Number Allowed\")\r\n            .required(\"PhoneNo required *\"),\r\n        pinCode: Yup.number()\r\n            .typeError(\"Only Number Allowed\")\r\n            .required(\"Pincode required *\"),\r\n        email: Yup.string().email(\"Invalid Format*\").required(\"Email required *\"),\r\n        course: Yup.string().required(\"Course required *\"),\r\n        city: Yup.string().required(\"City required *\"),\r\n        address: Yup.string().required(\"Address required *\"),\r\n    });\r\n\r\n    const validateSkills = (values) => {\r\n        let error;\r\n        if (values.length === 0) {\r\n            error = \"Required!\";\r\n        }\r\n        return error;\r\n    };\r\n    const validateCountry = (values) => {\r\n        let error;\r\n        if (values === '') {\r\n            error = \"Required!\";\r\n        }\r\n        else {\r\n            dispatch(getAllstate(values));\r\n        }\r\n        return error;\r\n    };\r\n    const validateState = (values) => {\r\n        let error;\r\n        if (values === '') {\r\n            error = \"Required!\";\r\n        }\r\n        return error;\r\n    };\r\n\r\n    const onSubmit = (values,onSubmitProps) => {\r\n      dispatch(updateProfile(values,onSubmitProps))  \r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <HeaderAndSidebar title=\"update\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12  blogbutton\">\r\n                        <Button className=\"blogbutton2\" variant=\"dark\"><Link to=\"/resetPassword\">Reset Password</Link></Button >\r\n                    </div>\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Card className=\"card\">\r\n                        <Card.Body className=\"cardbody\">\r\n                            <Formik\r\n                                initialValues={initialValues}\r\n                                validationSchema={validationSchema}\r\n                                onSubmit={onSubmit}\r\n                            >\r\n                                {(formik) => {\r\n                                    return (\r\n                                        <Form className=\"formUpdate\">\r\n                                            <div >\r\n                                                <h1 align=\"center\">Update Profile</h1>\r\n                                                <FormikControl\r\n                                                    control=\"input\"\r\n                                                    type=\"text\"\r\n                                                    lable=\"Name*\"\r\n                                                    name=\"name\"\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"input\"\r\n                                                    type=\"email\"\r\n                                                    lable=\"Email*\"\r\n                                                    name=\"email\"\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"input\"\r\n                                                    type=\"text\"\r\n                                                    lable=\"PhoneNo*\"\r\n                                                    name=\"phoneNo\"\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"select\"\r\n                                                    lable=\"Select Course*\"\r\n                                                    name=\"course\"\r\n                                                    option={option}\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"country\"\r\n                                                    lable=\"Select Country*\"\r\n                                                    name=\"country\"\r\n                                                    option={CountryData}\r\n                                                    validate={validateCountry}\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"state\"\r\n                                                    lable=\"Select State*\"\r\n                                                    name=\"state\"\r\n                                                    option={StatesData}\r\n                                                    validate={validateState}\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"input\"\r\n                                                    type=\"text\"\r\n                                                    lable=\"City*\"\r\n                                                    name=\"city\"\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"checkbox\"\r\n                                                    lable=\"Skill*\"\r\n                                                    name=\"skill\"\r\n                                                    validate={validateSkills}\r\n                                                    options={checkBoxOptions}\r\n                                                />\r\n                                                <FormikControl\r\n                                                    control=\"input\"\r\n                                                    type=\"text\"\r\n                                                    lable=\"Pincode*\"\r\n                                                    name=\"pinCode\"\r\n                                                />\r\n\r\n                                                <FormikControl\r\n                                                    control=\"textarea\"\r\n                                                    lable=\"Address*\"\r\n                                                    name=\"address\"\r\n                                                />\r\n                                                <div className=\"text-center\">\r\n                                                    <Button\r\n                                                        className=\"button\"\r\n                                                        type=\"submit\"\r\n                                                        variant=\"success\"\r\n                                                        disabled={!formik.isValid}\r\n                                                    >\r\n                                                        Update\r\n                                                 </Button>\r\n                                                    <Button className=\"button\" type=\"reset\" variant=\"info\">\r\n                                                        Reset\r\n                                            </Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Form>\r\n                                    );\r\n                                }}\r\n                            </Formik>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </HeaderAndSidebar>\r\n        </div>\r\n    )\r\n}\r\nexport default UpdateProfile","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\TableView.js",["177","178","179","180"],"import React, { useEffect } from 'react'\r\nimport HeaderAndSidebar from '../Header/HeaderAndSidebar'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBlogById } from '../../Redux/Actions';\r\n\r\n\r\nfunction TableView() {\r\n    // const dispatch = useDispatch()\r\n\r\n    // useEffect(() => {\r\n    //     dispatch(getBlogById())\r\n    // }, [])\r\n\r\n    // const blogById = useSelector(state => state.getBlogById.blogById.blog)\r\n    // console.log(blogById);\r\n\r\n    return (\r\n        <HeaderAndSidebar title=\"table\">\r\n           table 1\r\n        </HeaderAndSidebar>\r\n    )\r\n}\r\n\r\nexport default TableView\r\n","C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Header.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Country.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\States.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateRouter\\Auth.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateRouter\\PrivateRouter.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\Forgot.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Register\\ForgetToNew.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PublicFolder\\Pages\\Slider.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\CreateBlog.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\ResetPassword.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\PrivateFolder\\Pages\\SingleBlog.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Services\\header.js",[],"C:\\Users\\HP\\Desktop\\github\\Project\\project\\src\\Services\\isEmpty.js",[],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":41,"column":8,"nodeType":"187","endLine":41,"endColumn":10,"suggestions":"188"},{"ruleId":"185","severity":1,"message":"186","line":43,"column":8,"nodeType":"187","endLine":43,"endColumn":10,"suggestions":"189"},{"ruleId":"185","severity":1,"message":"186","line":28,"column":8,"nodeType":"187","endLine":28,"endColumn":10,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":1,"column":28,"nodeType":"193","messageId":"194","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"186","line":19,"column":8,"nodeType":"187","endLine":19,"endColumn":10,"suggestions":"195"},{"ruleId":"191","severity":1,"message":"196","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":26},{"ruleId":"191","severity":1,"message":"197","line":3,"column":10,"nodeType":"193","messageId":"194","endLine":3,"endColumn":21},{"ruleId":"191","severity":1,"message":"198","line":3,"column":23,"nodeType":"193","messageId":"194","endLine":3,"endColumn":34},{"ruleId":"191","severity":1,"message":"199","line":4,"column":10,"nodeType":"193","messageId":"194","endLine":4,"endColumn":21},"no-native-reassign",["200"],"no-negated-in-lhs",["201"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["202"],["203"],["204"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["205"],"'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getBlogById' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"206","fix":"208"},{"desc":"206","fix":"209"},{"desc":"206","fix":"210"},"Update the dependencies array to be: [dispatch]",{"range":"211","text":"212"},{"range":"213","text":"212"},{"range":"214","text":"212"},{"range":"215","text":"212"},[1344,1346],"[dispatch]",[1378,1380],[1031,1033],[695,697]]